
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum userRole {
  STUDENT
  TEACHER
}

model Account {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.ObjectId
  access_token       String?  @db.ObjectId
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.ObjectId
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}


model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  hashedPassword String?
  image         String?
  role        userRole @default(STUDENT)
  accounts      Account[]
  verificationToken AuthToken?    @relation(name: "VerificationToken")
  passwordResetToken  AuthToken?  @relation(name: "PasswordResetToken")
}


model AuthToken {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String  @db.ObjectId @unique
  token String @unique
  expires DateTime
  verifyuser  User @relation(fields: [userId],name: "VerificationToken",references: [id],onDelete: Cascade) 
  passwordResetuser  User @relation(fields: [userId],name: "PasswordResetToken",references: [id],onDelete: Cascade) 
}
